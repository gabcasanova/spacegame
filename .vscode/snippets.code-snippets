{
	// Place your spacegame workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create Class": {
		"scope": "lua",
		"prefix": "createclass",
		"body": [
			"-- Import libraries.",
			"local Object = require('libs.classic')",
			"--------------------------------------",
			" ",
			"local Class = Object:extend()",
			" ",
			"function Class:new()",
			"\t-- Add your code here",
			"end",
			" ",
			"return Class"
		],
		"description": "Creates a lua class with classic"
	},

	"Create Scene": {
		"scope": "lua",
		"prefix": "createscene",
		"body": [
			"-- Context: Game scene.",
			"-- Insert description of scene.",
			"---------------------------------------------------",
			" ",
			"-- Import libraries.",
			"local Object = require('libs.classic')",
			" ",
			"-- Import scripts.",
			"---------------------------------------------------",
			" ",
			"local Scene = Object:extend()",
			" ",
			"function Scene:new()",
			"\t-- Set the scene name.",
			"\tself.sceneName = 'Scene'",
			" ",
			"\t-- Grab mouse.",
			"\tlove.mouse.setGrabbed(false)",
			"end",
			" ",
			"function Scene:update(dt)",
			"\t--",
			"end",
			" ",
			"function Scene:draw()",
			"\t--",
			"end",
			" ",
			"function Scene:mousepressed(x, y, button, istouch, presses)",
			"\t--",
			"end",
			" ",
			"function Scene:keypressed(key, scancode, isrepeat)",
			"\t--",
			"end",
			" ",
			"function Scene:resize(w, h)",
			"\t--",
			"end",
			" ",
			"function Scene:mousemoved(x, y, dx, dy)",
			"\t--",
			"end",
			" ",
			"return Scene"
		],
		"description": "Creates game scene class"
	}
}